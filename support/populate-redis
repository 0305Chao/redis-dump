#!/usr/local/bin/ruby

# = Populate Redis
# 
# 
# Usage:
#
#     $ populate-redis <DB> <COUNT>
#     $ populate-redis 0 1000
#     $ populate-redis --flushdb 0 1000
#

require 'benchmark'
require 'redis'


FLUSHDB = ARGV.member?('--flushdb') && ARGV.shift
REDISDB = (ARGV[0] || 0).to_i
TIMES = (ARGV[1] || 1_000_000).to_i
REDISURI = 'redis://localhost:6371/%d' % REDISDB

redis = Redis.connect :url => REDISURI
now = Time.now.utc.to_i
if FLUSHDB
  puts "Flushing db #{REDISDB}..."
  redis.flushdb
end
puts "Generating..."
time = Benchmark.measure do
  redis.pipelined do
    TIMES.times do |idx|
      grp = (idx % 10)+1
      val = '0' * (grp*100).to_i
      redis.set 'rdtemp:%d:idx-%d:group-%d' % [now, idx, grp], val
    end
  end
end
info = redis.info
puts '%s in %s' % [info["db#{REDISDB}"], redis.client.id]
puts 'Used memory: %s' % [info['used_memory_human']]
puts time.to_s

